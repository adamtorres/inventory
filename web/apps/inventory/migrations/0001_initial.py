# Generated by Django 4.1 on 2022-08-15 18:22

import django.contrib.postgres.fields
from django.db import migrations, models
import django.db.models.deletion
import scrap.models.fields.char_field
import scrap.models.wide_filter
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Source',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', scrap.models.fields.char_field.CharField(blank=True, default='', help_text='vendor/donator name', max_length=1024)),
                ('active', models.BooleanField(default=True, help_text='is a usable source')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='SourceItem',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('delivered_date', models.DateField()),
                ('brand', scrap.models.fields.char_field.CharField(blank=True, default='', max_length=1024, verbose_name='Brand name')),
                ('cryptic_name', scrap.models.fields.char_field.CharField(blank=True, default='', help_text='Source-specific name of item as it appears on invoices', max_length=1024)),
                ('verbose_name', scrap.models.fields.char_field.CharField(blank=True, default='', help_text='More human-readable name of the item', max_length=1024)),
                ('item_code', scrap.models.fields.char_field.CharField(blank=True, default='', help_text='String of text that should uniquely identify the item', max_length=1024)),
                ('delivered_quantity', models.IntegerField(default=1, help_text='How many packs did we get?  Not ordered or back-ordered; physically present.')),
                ('pack_quantity', scrap.models.fields.char_field.CharField(blank=True, default='', help_text='For a pack of 6 #10 cans, this would be 6.', max_length=1024)),
                ('unit_quantity', models.IntegerField(default=1, help_text='count within a unit - dozen eggs would be 12.  50lb flour would be 50.')),
                ('unit_size', scrap.models.fields.char_field.CharField(blank=True, default='', help_text='1dz, 50lb, 12pk.  Might have the same number as unit_quantity', max_length=1024)),
                ('total_weight', models.DecimalField(decimal_places=4, default=0, max_digits=8)),
                ('individual_weights', django.contrib.postgres.fields.ArrayField(base_field=models.DecimalField(decimal_places=4, max_digits=8), size=None)),
                ('common_name', scrap.models.fields.char_field.CharField(blank=True, default='', help_text='Common brand-less name of item', max_length=1024)),
                ('extra_notes', scrap.models.fields.char_field.CharField(blank=True, default='', help_text='Any extra stuff for the item', max_length=1024)),
                ('extra_code', scrap.models.fields.char_field.CharField(blank=True, default='', help_text='A second code or whatever.', max_length=1024)),
                ('source', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='inventory.source')),
            ],
            options={
                'abstract': False,
            },
            bases=(scrap.models.wide_filter.WideFilterModelMixin, models.Model),
        ),
    ]
